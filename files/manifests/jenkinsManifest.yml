---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-account
  namespace: demoapps

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: demoapps
  labels:
    app: ci
spec:
  replicas: 1
  selector:
    matchLabels:
      role: ci
      app: jenkins
  template:
    metadata:
      labels:
        role: ci
        app: jenkins
    spec:
      serviceAccountName: jenkins-account
      shareProcessNamespace: true
      containers:
      - name: jenkins
        imagePullPolicy: IfNotPresent
        image: jenkins/jenkins
        ports:
          - containerPort: 443
            protocol: TCP
          - containerPort: 8080
            protocol: TCP
        env:
          - name: CONJUR_APPLIANCE_URL
            value: https://access.dap.svc.cluster.local/api
          - name: CONJUR_ACCOUNT
            value: cyberark
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: k8s-app-ssl
                key: ssl-certificate
          - name: JAVA_OPTS
            value: -Djenkins.install.runSetupWizard=false
          - name: JENKINS_OPTS
            value: JenkinsUriPrefix=/jenkins
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
            readOnly: true
      - name: authenticator
        image: cyberark/conjur-authn-k8s-client
        imagePullPolicy: Always
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: CONJUR_APPLIANCE_URL
            value: https://access.dap.svc.cluster.local/api
          - name: CONJUR_AUTHN_URL
            value: https://access.dap.svc.cluster.local/api/authn-k8s/k8s-follower
          - name: CONJUR_ACCOUNT
            value: cyberark
          - name: CONJUR_VERSION
            value: '5'
          - name: CONJUR_AUTHN_LOGIN
            value: host/conjur/authn-k8s/k8s-follower/apps/demoapps/deployment/jenkins
          - name: CONJUR_SSL_CERTIFICATE
            valueFrom:
              configMapKeyRef:
                name: k8s-app-ssl
                key: ssl-certificate
        volumeMounts:
          - mountPath: /run/conjur
            name: conjur-access-token
      volumes:
        - name: conjur-access-token
          emptyDir:
            medium: Memory
           
---
apiVersion: v1
kind: Service
metadata:
  name: admin-page
  namespace: demoapps
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 443
  selector:
    role: jenkins
  type: ClusterIP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins
  namespace: demoapps
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: jenkins.k8scluster.local
    http:
      paths:
      - path: /
        backend:
          serviceName: admin-page
          servicePort: 80