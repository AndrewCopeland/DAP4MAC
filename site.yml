---
- hosts: demo_machine
  pre_tasks:
    - name: Verify Ansible is greater than 2.8
      assert:
        that: "ansible_version.full is version_compare('2.8', '>=')"
        msg: >
          " You must update Ansible to at least 2.8."
    - name: Check for websites
      uri:
        url: "{{ item.url }}"
        body_format: json
        status_code: 200
        return_content: yes
        validate_certs: NO
        method: GET
      register: result
      until: result.status == 200
      retries: 5
      delay: 2
      with_items:
      - { url: 'https://hub.docker.com' }
      - { url: 'https://github.com' }
    - name: install PIP modules
      pip:
        name:
          - pyYAML
          - kubernetes
          - openshift
        extra_args: --user
 
  vars_prompt:
  - name: "mode"
    prompt: 'Do you want to stand up a new environment or delete an existing environment? ("new" or "delete")'
    default: "new"
    private: no
  
  tasks:
    - name: Load Manifests
      k8s:
        state: present
        src: "{{ playbook_dir }}/files/manifests/{{ item }}.yaml"
      with_items:
        - dashboardManifest
        - nginxIngressManifest
        - dashboardIngressManifest
        - weaveManifest
        - weaveIngressManifest
        - dapSourceManifest
        - dapAccessManifest
        - jenkinsManifest
      when: mode == 'new'
    
    - name: Configure Source DAP
      include_role:
        name: master
      when: mode == 'new'

    - name: Configure Access DAP
      include_role:
        name: follower
      when: mode == 'new'
    
    - name: Remove Cluster Items
      k8s:
        state: absent
        src: "{{ playbook_dir }}/files/manifests/{{ item }}.yaml"
      with_items:
      - dashboardManifest
      - nginxingressManifest
      - dashboardIngressManifest
      - weaveManifest
      - weaveIngressManifest
      - dapSourceManifest
      - dapAccessManifest
      - jenkinsManifest
      when: mode == 'delete'
  
  vars:
    clusterIngressRoute: 'k8scluster.local'
    dapAdmin: 'admin'
    dapAdminPass: 'Cyberark1'
    dapAccount: 'cyberark'
    dapSourceService: 'source.dap.svc.cluster.local'
    dapAccessService: 'access.dap.svc.cluster.local'
    dapFollowerReplicaCount: 1
    dapMasterContainerName: 'node'
    dapIngressRoute: dap.k8scluster.local
    demoMachineAddress: "{{ ansible_default_ipv4.address }}"