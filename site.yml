---
- hosts: demo_machine
  pre_tasks:
    - name: Verify Ansible is greater than 2.8
      assert:
        that: "ansible_version.full is version_compare('2.8', '>=')"
        msg: >
          " You must update Ansible to at least 2.8."

    - name: Check for websites
      uri:
        url: "{{ item.url }}"
        body_format: json
        status_code: 200
        return_content: yes
        validate_certs: NO
        method: GET
      register: result
      until: result.status == 200
      retries: 5
      delay: 2
      with_items:
      - { url: 'https://hub.docker.com' }
      - { url: 'https://github.com' }

    - name: install PIP modules
      pip:
        name:
          - pyYAML
          - kubernetes
          - openshift
        extra_args: --user

    - name: Check if Kubectl is installed in current shell
      shell: |
        which kubectl
      register: kubectl_is_installed
      
    - name: Fail if kubectl not installed
      assert:
        that: "kubectl_is_installed.stdout != ''"
        fail_msg: "kubectl is not found in the current shell. Please install kubectl and connect it to your target cluster."
        success_msg: "kubectl found. Located at {{ kubectl_is_installed.stdout }}"
 
  vars_prompt:
  - name: "ansible_become_pass"
    prompt: 'Enter your SUDO password'
    private: yes

  - name: "mode"
    prompt: 'Do you want to stand up a new environment or delete an existing environment? ("new" or "delete")'
    default: "new"
    private: no
  
  - name: "clusterFQDN"
    prompt: 'Enter k8s cluster FQDN'
    default: "k8scluster.local"
    private: no
  
  tasks:
    - name: Add host entries for webpages
      lineinfile:
        path: /etc/hosts
        line: 127.0.0.1 {{ item }}
        state: present
      with_items:
       - "{{ ingressRoutes }}"
      when: mode == 'new'
      become: yes

    - name: Load Manifests
      k8s:
        state: present
        src: "{{ playbook_dir }}/files/manifests/{{ item }}.yaml"
      with_items:
        - "{{ manifests }}"
      when: mode == 'new'
    
    - name: Configure DAP
      include_role:
        name: "{{item}}"
      when: mode == 'new'
      with_items:
        - master
        - follower
      
    - name: Conigure SSL Cert configMap
      include_tasks: sslCertConfigMap.yml
      when: mode == 'new'

    - name: Conigure Gitlab
      include_tasks: gitlab.yml
      when: mode == 'new'

    - name: Conigure Jenkins
      include_tasks: jenkins.yml
      when: mode == 'new'
    
    - name: Remove Cluster Items
      k8s:
        state: absent
        src: "{{ playbook_dir }}/files/manifests/{{ item }}.yaml"
      with_items:
        - "{{ manifests }}"
      when: mode == 'delete'

    - name: Remove host entries for webpages
      lineinfile:
        path: /etc/hosts
        line: 127.0.0.1 {{ item }}
        state: absent
      with_items:
       - "{{ ingressRoutes }}"
      when: mode == 'delete'
      become: yes
  
  vars:
    dapAdmin: 'admin'
    dapAdminPass: 'Cyberark1'
    dapAccount: 'cyberark'
    dapSourceService: 'source.dap.svc.cluster.local'
    dapAccessService: 'access.dap.svc.cluster.local'
    dapFollowerReplicaCount: 1
    dapMasterContainerName: 'node'
    dapIngressRoute: "dap.{{clusterFQDN}}"
    jenkinsIngressRoute: "jenkins.{{clusterFQDN}}"
    gitlabIngressRoute: "gitlab.{{clusterFQDN}}"
    dashboardIngressRoute: "dashboard.{{clusterFQDN}}"
    weaveIngressRoute: "weave.{{clusterFQDN}}"
    demoMachineAddress: "{{ ansible_default_ipv4.address }}"
    manifests:
      - dashboardManifest
      - nginxingressManifest
      - dashboardIngressManifest
      - weaveManifest
      - weaveIngressManifest
      - dapSourceManifest
      - dapAccessManifest
      - jenkinsManifest
      - gitlabManifest
      - gogsManifest
    appNamespaces:
      - jenkins
      - gitlab
      - gogs
    ingressRoutes:
      - dapIngressRoute
      - jenkinsIngressRoute
      - gitlabIngressRoute
      - dashboardIngressRoute
      - weaveIngressRoute
